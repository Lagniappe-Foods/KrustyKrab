openapi: 3.1.0
x-stoplight:
  id: 89kuqh6fotpoj
info:
  title: template
  version: '1.0'
servers:
  - url: 'http://localhost:3000/api/v1'
paths:
  /user/all:
    parameters: []
    get:
      summary: Get User by ID
      tags: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
              examples: {}
      operationId: getAllUsers
      description: Get all users
  /user:
    post:
      summary: Create New User
      operationId: createUser
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                required:
                  - user
              examples: {}
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
            examples:
              Example 1:
                value:
                  email: user@email.com
                  password: user_password
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
    get:
      summary: Get All Users
      operationId: getUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
      description: Gets the current user who made the request
  /auth:
    post:
      summary: Login
      operationId: login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
                required:
                  - accessToken
      description: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
  /auth/logout:
    post:
      summary: ''
      operationId: sendLogout
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '204':
          description: No Content
      description: Clears the refresh token that is stored in the refresh_jwt cookie
  /auth/register:
    post:
      summary: ''
      operationId: register
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      description: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
  /auth/verify-email:
    post:
      summary: ''
      operationId: verifyEmail
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
      description: Verify a users email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                emailToken:
                  type: string
  /auth/set-password:
    post:
      summary: ''
      operationId: setPassword
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      description: Set password for user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                password:
                  type: string
              required:
                - userId
                - password
components:
  schemas:
    User:
      type: object
      x-examples:
        Example 1:
          _id:
            $oid: 63abdd37dba610ee7ef68dbb
          username: helloWorld
          email: charlie.dowd1996@gmail.com
          firstName: Charlie
          password: '123'
          createdAt:
            $date: '2022-12-28T06:07:51.229Z'
          updatedAt:
            $date: '2022-12-28T06:07:51.229Z'
          __v: 0
      title: User
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        _id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        emailVerified:
          type: boolean
      required:
        - email
        - _id
        - createdAt
        - updatedAt
        - emailVerified
      description: ''
      examples:
        - email: user@example.com
          password: string
          _id: string
          createdAt: '2019-08-24T14:15:22Z'
          updatedAt: '2019-08-24T14:15:22Z'
          emailVerified: true
    Todo:
      title: Todo
      x-stoplight:
        id: zanfjehx494u1
      type: object
      properties:
        _id:
          type: string
        completed:
          type: boolean
        task:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - _id
        - completed
        - task
        - createdAt
        - updatedAt
